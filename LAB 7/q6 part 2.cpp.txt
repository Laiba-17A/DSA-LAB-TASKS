#include <iostream>
using namespace std;

void merge(int arr[], int left, int mid, int right) {
    int n1 = mid - left + 1;
    int n2 = right - mid;
    
    int* leftArr = new int[n1];
    int* rightArr = new int[n2];
    
    for (int i = 0; i < n1; i++) {
        leftArr[i] = arr[left + i];
    }
    for (int i = 0; i < n2; i++) {
        rightArr[i] = arr[mid + 1 + i];
    }
    
    int i = 0, j = 0, k = left;
    
    while (i < n1 && j < n2) {
        if (leftArr[i] <= rightArr[j]) {
            arr[k] = leftArr[i];
            i++;
        } else {
            arr[k] = rightArr[j];
            j++;
        }
        k++;
    }
    
    while (i < n1) {
        arr[k] = leftArr[i];
        i++;
        k++;
    }
    
    while (j < n2) {
        arr[k] = rightArr[j];
        j++;
        k++;
    }
    
    delete[] leftArr;
    delete[] rightArr;
}

void mergeSort(int arr[], int left, int right) {
    if (left < right) {
        int mid = left + (right - left) / 2;
        
        mergeSort(arr, left, mid);
        mergeSort(arr, mid + 1, right);
        
        merge(arr, left, mid, right);
    }
}

void display(int arr[], int n) {
    for (int i = 0; i < n; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

int main() {
    int arr1[10], arr2[10];
    int combined[20];
    
    cout << "Enter 10 integers for first array:" << endl;
    for (int i = 0; i < 10; i++) {
        cin >> arr1[i];
    }
    
    cout << "Enter 10 integers for second array:" << endl;
    for (int i = 0; i < 10; i++) {
        cin >> arr2[i];
    }
    
    for (int i = 0; i < 10; i++) {
        combined[i] = arr1[i];
    }
    for (int i = 0; i < 10; i++) {
        combined[i + 10] = arr2[i];
    }
    
    mergeSort(combined, 0, 19);
    
    cout << "Sorted array using Merge Sort:" << endl;
    display(combined, 20);
    
    return 0;
}