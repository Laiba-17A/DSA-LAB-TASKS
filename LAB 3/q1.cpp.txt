#include <iostream>
using namespace std;

struct Node {
    int data;
    Node* next;
    
    Node(int val) {
        data = val;
        next = nullptr;
    }
};

class LinkedList {
private:
    Node* head;
    
public:
    LinkedList() {
        head = nullptr;
    }
    
    void addAtEnd(int val) {
        Node* newNode = new Node(val);
        if (head == nullptr) {
            head = newNode;
            return;
        }
        
        Node* temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newNode;
    }
    
    void addAtFront(int val) {
        Node* newNode = new Node(val);
        newNode->next = head;
        head = newNode;
    }
    
    void addAtPosition(int val, int pos) {
        if (pos == 1) {
            addAtFront(val);
            return;
        }
        
        Node* newNode = new Node(val);
        Node* temp = head;
        for (int i = 1; i < pos - 1 && temp != nullptr; i++) {
            temp = temp->next;
        }
        
        if (temp != nullptr) {
            newNode->next = temp->next;
            temp->next = newNode;
        }
    }
    
    void deleteValue(int val) {
        if (head == nullptr) return;
        
        if (head->data == val) {
            Node* temp = head;
            head = head->next;
            delete temp;
            return;
        }
        
        Node* current = head;
        while (current->next != nullptr && current->next->data != val) {
            current = current->next;
        }
        
        if (current->next != nullptr) {
            Node* temp = current->next;
            current->next = current->next->next;
            delete temp;
        }
    }
    
    void display() {
        Node* temp = head;
        while (temp != nullptr) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }
};

int main() {
    int arr[] = {3, 1, 2, 5, 8};
    int size = 5;
    
    cout << "Array: ";
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
    
    LinkedList list;
    
    for (int i = 0; i < size; i++) {
        list.addAtEnd(arr[i]);
    }
    
    list.addAtEnd(9);
    list.addAtPosition(11, 3);
    list.addAtFront(4);
    
    list.deleteValue(1);
    list.deleteValue(2);
    list.deleteValue(5);
    
    cout << "Final linked list: ";
    list.display();
    
    return 0;
}